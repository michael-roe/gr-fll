/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(frequency_locked_loop_ff.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(1025b99274b09a382ab716fb68afa487)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fll/frequency_locked_loop_ff.h>
// pydoc.h is automatically generated in the build directory
#include <frequency_locked_loop_ff_pydoc.h>

void bind_frequency_locked_loop_ff(py::module& m)
{

    using frequency_locked_loop_ff    = gr::fll::frequency_locked_loop_ff;


    py::class_<frequency_locked_loop_ff, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<frequency_locked_loop_ff>>(m, "frequency_locked_loop_ff", D(frequency_locked_loop_ff))

        .def(py::init(&frequency_locked_loop_ff::make),
           D(frequency_locked_loop_ff,make)
        )
        



        ;




}








